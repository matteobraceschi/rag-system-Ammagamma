from nltk.translate.bleu_score import sentence_bleu
from rouge_score import rouge_scorer

def simple_tokenize(text):
    """
    A simple tokenizer that splits text into tokens based on whitespace and punctuation.
    
    :param text: The input text to tokenize
    :return: A list of tokens
    """
    return text.lower().split()

def evaluate_response(generated_response, correct_response):
    """
    Evaluate the generated responses against the correct answers.
    
    :param generated_response: response generated by the model
    :param correct_response: correct answer
    :return: None
    """
     
    # Calculate BLEU
    generated_tokens = simple_tokenize(generated_response)
    correct_tokens = simple_tokenize(correct_response)
    bleu_score = sentence_bleu([correct_tokens], generated_tokens)

    # Calculate ROUGE
    scorer = rouge_scorer.RougeScorer(['rouge1', 'rouge2', 'rougeL'], use_stemmer=True)
    scores = scorer.score(correct_response, generated_response)
    
    # Print the results
    print(f"\nCorrect: {correct_response}\n")
    print(f"BLEU Score: {bleu_score:.4f}")
    print(f"ROUGE-1: {scores['rouge1'].fmeasure:.4f}")
    print(f"ROUGE-2: {scores['rouge2'].fmeasure:.4f}")
    print(f"ROUGE-L: {scores['rougeL'].fmeasure:.4f}")

