import nltk
from nltk.translate.bleu_score import sentence_bleu
from rouge_score import rouge_scorer

# Make sure to download the necessary NLTK resources
nltk.download('punkt')

def evaluate_responses(generated_responses, correct_responses):
    """
    Evaluate the generated responses against the correct answers.
    
    :param generated_responses: List of responses generated by the model
    :param correct_responses: List of correct answers
    :return: None
    """
    
    # Check that the lengths of both lists are equal
    assert len(generated_responses) == len(correct_responses), "Both lists must have the same length"
    
    for i in range(len(generated_responses)):
        generated = generated_responses[i]
        correct = correct_responses[i]
        
        # Calculate BLEU
        generated_tokens = nltk.word_tokenize(generated.lower())
        correct_tokens = nltk.word_tokenize(correct.lower())
        bleu_score = sentence_bleu([correct_tokens], generated_tokens)

        # Calculate ROUGE
        scorer = rouge_scorer.RougeScorer(['rouge1', 'rouge2', 'rougeL'], use_stemmer=True)
        scores = scorer.score(correct, generated)
        
        # Print the results
        print(f"Response {i + 1}:")
        print(f"Generated: {generated}")
        print(f"Correct: {correct}")
        print(f"BLEU Score: {bleu_score:.4f}")
        print(f"ROUGE-1: {scores['rouge1'].fmeasure:.4f}")
        print(f"ROUGE-2: {scores['rouge2'].fmeasure:.4f}")
        print(f"ROUGE-L: {scores['rougeL'].fmeasure:.4f}")
        print("-" * 40)

# Example usage
generated_responses = [
    "The city that hosted the first modern Olympic Games is Athens in 1896.",
    "The first Summer Olympics took place in Athens in 1896."
]

correct_responses = [
    "Athens hosted the first modern Olympic Games in 1896.",
    "The modern Summer Olympics began in Athens in 1896."
]

# Evaluate the responses
evaluate_responses(generated_responses, correct_responses)
